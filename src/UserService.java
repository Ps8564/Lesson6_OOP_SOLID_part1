/*
 * 2.Принцип открытости/закрытости (Open/Closed Principle, OCP):
 * Интерфейс UserController соответствует этому принципу.
 * Интерфейс UserController использует обобщенный тип T extends User, что позволяет расширять
 * его функциональность без необходимости изменения самого интерфейса.
 * Это делает интерфейс открытым для расширения, но закрытым для модификации.
 *
 * 4.Принцип разделения интерфейсов (Interface Segregation Principle, ISP):
 * Интерфейс UserService соответствует этому принципу, так как он предоставляет только те функции,
 * которые связаны с обработкой пользователей, без включения лишних методов.
 * Это позволяет клиентам использовать интерфейс без необходимости реализации ненужных методов
 * и упрощает добавление новых типов пользователей, сохраняя при этом независимость и гибкость кода.
 */

import java.util.List;

public interface UserService<T extends User> {

    public List<T> getAll();

    public void initData(List<T> list);

    public void create(String surname, String firstname, String patronymic);
}